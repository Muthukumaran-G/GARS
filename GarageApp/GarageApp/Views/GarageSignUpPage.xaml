<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    x:Class="GarageApp.Views.GarageSignUpPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:behaviour="clr-namespace:GarageApp.Behaviors"
    xmlns:border="clr-namespace:Syncfusion.XForms.Border;assembly=Syncfusion.Core.XForms"
    xmlns:buttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
    xmlns:control="clr-namespace:GarageApp.Controls"
    xmlns:converter="clr-namespace:GarageApp.Converters"
    xmlns:core="clr-namespace:Syncfusion.XForms.Core;assembly=Syncfusion.Core.XForms"
    xmlns:gradient="clr-namespace:Syncfusion.XForms.Graphics;assembly=Syncfusion.Core.XForms"
    xmlns:local="clr-namespace:GarageApp.Views"
    xmlns:viewModel="clr-namespace:GarageApp.ViewModels"
    Title="Sign Up"
    NavigationPage.HasNavigationBar="False">

    <ContentPage.Resources>
        <ResourceDictionary>
            <converter:BooleanToColorConverter x:Key="ColorConverter" />
            <converter:InverseBoolConverter x:Key="InverseBoolConverter" />
            <converter:NameValidationConverter x:Key="FirstValidationErrorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <!--  Binding context for sign-up page  -->
    <ContentPage.BindingContext>
        <viewModel:SignUpPageViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Background>
        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="1,1">
            <GradientStop Color="Blue"
                          Offset="0.1"/>
            <GradientStop Color="IndianRed"
                          Offset="1.0"/>
        </LinearGradientBrush>
    </ContentPage.Background>
    
    <ContentPage.Content>
        <Grid>
            <ScrollView HorizontalOptions="Center">
                <ScrollView.VerticalOptions>
                    <OnIdiom
                        x:TypeArguments="LayoutOptions"
                        Default="CenterAndExpand"
                        Phone="FillAndExpand" />
                </ScrollView.VerticalOptions>

                <StackLayout
                    Margin="{core:OnPlatformOrientationThickness PhonePortrait='20,32',
                                                                 PhoneLandscape='150,32',
                                                                 TabletPortrait='200,50',
                                                                 TabletLandscape='300,50',
                                                                 Desktop='30'}"
                    Spacing="0"
                    VerticalOptions="FillAndExpand"
                    WidthRequest="{OnPlatform Default='-1',
                                              UWP='350'}">
                    <StackLayout
                        HorizontalOptions="Center"
                        Spacing="24"
                        VerticalOptions="CenterAndExpand">

                        <!--  Label to display the title of this page  -->
                        <Label
                            FontSize="20"
                            Style="{StaticResource TitleLabelStyle}"
                            Text="Sign Up"
                            TextColor="{DynamicResource Gray-White}" />

                        <!--  Label to display the description of this page  -->
                        <Label
                            Margin="0,-16,0,8"
                            Style="{StaticResource DescriptionLabelStyle}"
                            Text="Create an account to start doing more"
                            TextColor="{DynamicResource Gray-White}" />

                        <StackLayout>
                            <!--  Entry to get username from user  -->
                                <Grid ColumnDefinitions="*, Auto">
                                    <Frame BorderColor="Gray" HeightRequest="30" Grid.ColumnSpan="2" BackgroundColor="White" Opacity="0.1" CornerRadius="20"/>

                                    <control:BorderlessEntry
                                        x:Name="NameEntry"
                                        Margin="15,0"
                                        HeightRequest="40"
                                        Placeholder="Name"
                                        PlaceholderColor="{StaticResource EntryPlaceholderColor}"
                                        Style="{StaticResource BorderlessEntryStyle}"
                                        Text="{Binding Name.Value}"
                                        TextColor="{StaticResource Gray-White}">
                                        <Entry.Behaviors>
                                            <behaviour:EntryLineValidationBehaviour IsValid="{Binding Name.IsValid}" />
                                        </Entry.Behaviors>
                                    </control:BorderlessEntry>

                                    <!--  Label to display error icon  -->
                                    <Label
                                        Grid.Column="1"
                                        IsVisible="{Binding Path=IsVisible, Source={x:Reference NameValidationLabel}}"
                                        Style="{StaticResource ErrorIconLabelStyle}"
                                        Text="{StaticResource Error}" />
                                </Grid>

                            <!--  Label to display error message  -->
                            <Label
                                x:Name="NameValidationLabel"
                                Margin="15,-3,0,0"
                                IsVisible="{Binding Name.IsValid, Converter={StaticResource InverseBoolConverter}}"
                                Style="{StaticResource SimpleLabelStyle}"
                                Text="{Binding Name.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                                TextColor="{DynamicResource Red}"
                                VerticalOptions="FillAndExpand" />
                        </StackLayout>

                        <!--  Entry to get email ID from user  -->
                        <!--<local:EmailEntry />-->

                        <StackLayout>
                            <!--<border:SfBorder BorderColor="{Binding Path=IsFocused, Source={x:Reference Email}, Converter={x:StaticResource ColorConverter}, ConverterParameter=0}" Style="{StaticResource LoginFormBorderlessEntryBorderStyle}">-->


                            <Grid ColumnDefinitions="*, Auto">
                                <Frame BorderColor="Gray" HeightRequest="30" Grid.ColumnSpan="2" BackgroundColor="White" Opacity="0.1" CornerRadius="20"/>
                                <control:BorderlessEntry
                        x:Name="Email"
                        Margin="15,0"
                        HeightRequest="40"
                        Keyboard="Email"
                        Placeholder="Email"
                        PlaceholderColor="{StaticResource EntryPlaceholderColor}"
                        Style="{StaticResource BorderlessEntryStyle}"
                        Text="{Binding Email.Value}"
                        TextColor="{StaticResource Gray-White}">
                                    <Entry.Behaviors>
                                        <behaviour:EntryLineValidationBehaviour IsValid="{Binding Email.IsValid}" />
                                    </Entry.Behaviors>

                                </control:BorderlessEntry>
                                <Label
                        Grid.Column="1"
                        IsVisible="{Binding Path=IsVisible, Source={x:Reference ValidationLabel}}"
                        Style="{StaticResource ErrorIconLabelStyle}"
                        Text="{StaticResource Error}" />

                            </Grid>
                            <Label
                x:Name="ValidationLabel"
                Margin="15,-5,0,0"
                FontSize="12"
                IsVisible="{Binding Email.IsValid, Converter={StaticResource InverseBoolConverter}}"
                Style="{StaticResource SimpleLabelStyle}"
                Text="{Binding Email.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                TextColor="{DynamicResource Red}"
                VerticalOptions="FillAndExpand" />

                        </StackLayout>

                        <StackLayout>
                            <!--  Entry to get password from user  -->
                                <Grid ColumnDefinitions="*, Auto">
                                <Frame BorderColor="Gray" HeightRequest="30" Grid.ColumnSpan="2" BackgroundColor="White" Opacity="0.1" CornerRadius="20"/>
                                <control:BorderlessEntry
                                        x:Name="PasswordEntry"
                                        Margin="15,0"
                                        HeightRequest="40"
                                        IsPassword="true"
                                        Placeholder="Password"
                                        PlaceholderColor="{StaticResource EntryPlaceholderColor}"
                                        Style="{StaticResource BorderlessEntryStyle}"
                                        Text="{Binding Password.Item1.Value}"
                                        TextColor="{StaticResource Gray-White}">
                                        <Entry.Behaviors>
                                            <behaviour:EntryLineValidationBehaviour IsValid="{Binding Password.Item1.IsValid}" />
                                        </Entry.Behaviors>
                                    </control:BorderlessEntry>

                                    <!--  Label to display error icon  -->
                                    <Label
                                        Grid.Column="1"
                                        IsVisible="{Binding Path=IsVisible, Source={x:Reference PasswordValidationLabel}}"
                                        Style="{StaticResource ErrorIconLabelStyle}"
                                        Text="{StaticResource Error}" />
                                </Grid>

                            <!--  Label to display error message  -->
                            <Label
                                x:Name="PasswordValidationLabel"
                                Margin="15,-3,0,0"
                                IsVisible="{Binding Password.Item1.IsValid, Converter={StaticResource InverseBoolConverter}}"
                                Style="{StaticResource SimpleLabelStyle}"
                                Text="{Binding Password.Item1.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                                TextColor="{DynamicResource Red}"
                                VerticalOptions="FillAndExpand" />
                        </StackLayout>

                        <StackLayout>
                            <!--  Entry to get the confirm password from user  -->
                                <Grid ColumnDefinitions="*, Auto">
                                <Frame BorderColor="Gray" HeightRequest="30" Grid.ColumnSpan="2" BackgroundColor="White" Opacity="0.1" CornerRadius="20"/>
                                <control:BorderlessEntry
                                        x:Name="ConfirmPasswordEntry"
                                        Margin="15,0"
                                        HeightRequest="40"
                                        IsPassword="true"
                                        Placeholder="Confirm Password"
                                        PlaceholderColor="{StaticResource EntryPlaceholderColor}"
                                        Style="{StaticResource BorderlessEntryStyle}"
                                        Text="{Binding Password.Item2.Value}"
                                        TextColor="{StaticResource Gray-White}">
                                        <Entry.Behaviors>
                                            <behaviour:EntryLineValidationBehaviour IsValid="{Binding Password.Item2.IsValid}" />
                                        </Entry.Behaviors>
                                    </control:BorderlessEntry>

                                    <!--  Label to display error icon  -->
                                    <Label
                                        Grid.Column="1"
                                        IsVisible="{Binding Path=IsVisible, Source={x:Reference ConfirmPasswordValidationLabel}}"
                                        Style="{StaticResource ErrorIconLabelStyle}"
                                        Text="{StaticResource Error}" />
                                </Grid>

                            <!--  Label to display error message  -->
                            <Label
                                x:Name="ConfirmPasswordValidationLabel"
                                Margin="15,-3,0,0"
                                IsVisible="{Binding Password.Item2.IsValid, Converter={StaticResource InverseBoolConverter}}"
                                Style="{StaticResource SimpleLabelStyle}"
                                Text="{Binding Password.Item2.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                                TextColor="{DynamicResource Red}"
                                VerticalOptions="FillAndExpand" />
                        </StackLayout>

                        <!--  Sign-up button  -->
                        <Grid>
                            <ActivityIndicator Color="DarkOrange" VerticalOptions="Center" HorizontalOptions="Center"
                             IsVisible="{Binding IsLoginClicked}" IsRunning="True" IsEnabled="True"/>
                            <Button CornerRadius="25" IsVisible="{Binding IsLoginClicked}"
                            Command="{Binding SignUpCommand}"
                            HorizontalOptions="FillAndExpand"
                            Text="REGISTER">
                                <Button.Triggers>
                                    <DataTrigger TargetType="Button" Binding="{Binding IsLoginClicked}" Value="true">
                                        <Setter Property="IsVisible" Value="false"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Button" Binding="{Binding IsLoginClicked}" Value="false">
                                        <Setter Property="IsVisible" Value="true"/>
                                    </DataTrigger>
                                </Button.Triggers>
                                <Button.Background>
                                    <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                                        <GradientStop Color="Blue"
                          Offset="0.1"/>
                                        <GradientStop Color="IndianRed"
                          Offset="0.9"/>
                                    </LinearGradientBrush>
                                </Button.Background>
                            </Button>
                        </Grid>
                    </StackLayout>

                    <StackLayout
                        HorizontalOptions="Center"
                        Orientation="Horizontal"
                        Spacing="1"
                        VerticalOptions="End">

                        <StackLayout.Padding>
                            <OnIdiom
                                x:DataType="Thickness"
                                Default="0, 48, 0, 0"
                                Phone="0" />
                        </StackLayout.Padding>

                        <Label
                            Style="{StaticResource DescriptionLabelStyle}"
                            Text="Already have an account?"
                            TextColor="{DynamicResource Gray-White}"
                            VerticalTextAlignment="Center" />

                        <Button CornerRadius="25"
                            Command="{Binding LoginCommand}"
                            Text="Log In"
                            TextColor="GhostWhite" >
                            <Button.Background>
                                <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                                    <GradientStop Color="Blue"
                          Offset="0.1"/>
                                    <GradientStop Color="IndianRed"
                          Offset="0.9"/>
                                </LinearGradientBrush>
                            </Button.Background>
                        </Button>

                    </StackLayout>
                </StackLayout>
            </ScrollView>

            <!--  Close button  -->
            <Button CornerRadius="25" HeightRequest="50" WidthRequest="50"
                Margin="8" Opacity="0.7"
                Command="{Binding BackButtonCommand}"
                FontSize="20"
                HorizontalOptions="End"
                FontFamily="FontIcons"
                Text="{StaticResource Close}"
                BackgroundColor="Red"
                TextColor="{DynamicResource Gray-White}"
                VerticalOptions="Start" />

        </Grid>
    </ContentPage.Content>
</ContentPage>